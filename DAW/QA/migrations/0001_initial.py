# Generated by Django 4.2 on 2023-12-11 10:42

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('point', models.DecimalField(decimal_places=2, max_digits=3)),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('levelOfAddiction', models.DecimalField(decimal_places=2, max_digits=4)),
                ('averageHoursOfGammingPerWeek', models.DecimalField(decimal_places=2, max_digits=5)),
                ('averageHoursOfGammingPerMounth', models.DecimalField(decimal_places=2, max_digits=5)),
                ('insomniaScore', models.DecimalField(decimal_places=2, max_digits=4)),
                ('excessiveSleepinessScore', models.DecimalField(decimal_places=2, max_digits=4)),
                ('anxietyScore', models.DecimalField(decimal_places=2, max_digits=4)),
                ('depressionScore', models.DecimalField(decimal_places=2, max_digits=4)),
                ('idUser', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('questionText', models.TextField()),
                ('questionType', models.CharField(max_length=45)),
            ],
        ),
        migrations.CreateModel(
            name='Questionnaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateOfTheQuestionnaire', models.DateTimeField()),
                ('id_Patient', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='QA.patient')),
            ],
        ),
        migrations.CreateModel(
            name='ResponsesQuestionnaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateOfResponse', models.DateTimeField()),
                ('score', models.DecimalField(decimal_places=2, max_digits=4, null=True)),
                ('id_Questionnaire', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='QA.questionnaire')),
            ],
        ),
        migrations.CreateModel(
            name='ResponsesQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_Option', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='QA.option')),
                ('id_Reponse_Questionnaire', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='QA.responsesquestionnaire')),
            ],
        ),
        migrations.AddField(
            model_name='option',
            name='id_Question',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='QA.question'),
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scheduledTherapySessions', models.IntegerField()),
                ('idUser', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
